{
	"type" : "sbqTemplate",
	"baseType" : "villager",

	"scripts" : [
		"/npcs/bmain.lua",
		"/scripts/SBQ_npc_bmain.lua",
		"/scripts/speciesAnimOverride_npc_bmain.lua",
		"/npcs/tenants/sbq/SBQ_vore_tenant.lua"
	],

	// you really should make sure to define the npcname so the OC actually has the OC's name
	"npcname" : "Template",
	// identity is quite important if you don't want things to be randomly generated
	// great thing here is one can define whatever they want as the name of the hair, facial hair, or facial mask types, even if they're not
	// available to the player in normal customization it just has to be in the folder with the rest of the hairs for the species
	// if one knows how to make a directives string too, they can just define it here for the specific parts
	"identity" : {
		// "hairType" : "0",
		// "facialHairType" : "",
		// "facialMaskType" : "",

		// "hairDirectives" : "",
		// "facialHairDirectives" : "",
		// "facialMaskDirectives" : "",
		// "emoteDirectives" : "",
		// "bodyDirectives" : "",

		// "gender" : "male",
		// "personalityArmIdle" : "idle.2",
		// "personalityIdle" : "idle.2",
	},
	"scriptConfig" : {
		"sbqNPC" : true,

		// these remove access to the settings panels for pred and prey respectively
		// "isPredator" : false,
		// "isPrey" : false,

		"isOC" : true, // this is just for scripts to identify this NPC as an OC and for some specific behavior relating to that
		"behavior" : "sbqvorevillager",
		"behaviorConfig": {
			"emptyHands": true
		},
		"questGenerator" : {
			"pools" : ["sbq_common", "sbq_transform", "sbq_vore", "tenant"],
			"graduation" : {
				"nextNpcType" : [] // this prevents the NPC from graduating into crew
				//"nextNpcType" : ["sbqCrewTemplate"] // this lets the NPC graduate into a recruitable crewmember after doing a few quests for them
			}
		},


		"uniqueId" : "sbqTemplate", // the unique ID for the NPC, used for other NPCs that may want to detect this specific one, and to prevent multiple instances of the same character appearing on one planet

		// if you understand stardust metagui, you can create the NPC's 'bio' tab here
		// settingsGuiStrings
		"tenantBio" : { "type" : "scrollArea", "thumbScrolling" : true, "scrollBars" : true, "scrollDirections" : [0, 1], "children" : [
			{ "mode" : "vertical" },
			[
				//{ "type" : "image", "file" : "/humanoid/sbqTemplate/portraits/neutral.png" },
				[
					[ { "type" : "label", "text" : "Age: ??"}, { "type" : "label", "text" : "Gender: ???"} ],
					[ { "type" : "label", "text" : "Pronouns: ???"}, { "type" : "label", "text" : "Species: ???"} ],
					{ "type" : "spacer", "size" : 3 },
					{ "type" : "label", "text" : "A mystery..."},
					{ "type" : "spacer", "size" : 3 },
					{ "type" : "label", "text" : "Favorites: being moulded into something else."}
				]
			]
		]},

		"entityPortrait" : true, // set this to true of you want the dialogue box portrait to use the entity's portrait
		"portrait" : "bust",
		// if you want to use specially drawn sprites for dialogue box portraits, remove the two portrait args above, and uncomment the args below
		/*
		"portrait" : "neutral.png",
		"portraitPath" : "/humanoid/sbqTemplate/portraits/", // Depending on how you make your OC, you may want to have your portraits located in different places, so heres some suggestions
		"portraitPath" : "/npcs/tenants/sbq/ocs/sbqTemplate/portraits/",
		*/

		"dialogueBoxScripts" : ["/npcs/tenants/sbq/ocs/sbqTemplateDialogueBoxScripts.lua"], // this is for scripts used by both the dialogue box and the NPC itself, used for adding extra behavior step scripts to the dialogue tree
		// as the scripts here are being called on both a UI and on the NPC, do avoid using the player or npc lua tables in such scripts unless said script would only trigger in the context of it having said table

		//"dialogueTree" : "/npcs/tenants/sbq/sbqVoreVillager.npctype:scriptConfig.dialogueTree", // if one wants to just use the default random gen NPC dialogue tree, one can just delete the table and uncomment this
		"dialogueTree" : {
			"dialogueFile" : "/npcs/tenants/sbq/sbqVoreVillager.dialogue",
			// after following a path, next steps will automatically advance down the tree building the result dialogue

			// overall default values for a "new" dialogue
			"default" : {
				"dialogueRandom" : [":missingDialogue"],
				"jump" : ".greeting" // if a part of the dialogue tree goes to a part that has no data for continuation via the button it will jump to which one of these it saw last while moving down the tree
			},
			// greeting is the default start of the tree
			// settings come from itself
			"greeting" : {
				"new" : {"jump" : ".converse"},
				"next" : "giveTenantRewards",
				"rewards" : {
					"replace" : {"dialogueRandom" : [":rewardsGreeting"]},
					"next" : ["introduced"],
					"true" : {
						"replace" : {"dialogueRandom" : [":rewardsGreetingIntroduced"]}
					}
				},
				"default" : {
					"next" : ["isOwner"],
					"replace" : {"dialogueRandom" : [":greeting"]},
					"true" : {
						"next" : ["isFollowing"],
						"replace" : {
							"dialogueRandom" : [":greetingCrew"],
							"buttonText" : ["Stay"],
							"callScript" : "swapFollowing"
						},
						"false" : { "replace" : {"buttonText": ["Follow"]}}
					}
				},
				"stay" : {
					"new" : {
						"dialogueRandom" : [":crewStay"]
					}
				},
				"follow" : {
					"new" : {
						"dialogueRandom" : [":crewFollow"]
					}
				},
				"fullCrew" : {
					"new" : {"dialogueRandom" : [":fullCrew"]}
				}
			},
			// lines triggered when a player may recieve a certain reward
			"rewardNotify" :{
				"new" : {},
				"next" : ["poolName", "rewardName"],
				"money" : {
					"replace" : {"dialogueRandom":[":rewardNotifyMoney"]}
				},
				"lowValueQuestRewards" : {
					"replace" : {"dialogueRandom":[":rewardNotifyLowValueQuestRewards"]}
				},
				"mediumValueQuestRewards" : {
					"replace" : {"dialogueRandom":[":rewardNotifyMediumValueQuestRewards"]}
				},
				"highValueQuestRewards" : {
					"replace" : {"dialogueRandom":[":rewardNotifyHighValueQuestRewards"]}
				}
			},

			// lines for when someone requests an action from them
			"requestedAction" : {
				// name of action requested
				"oralVore" : {
					// is the action available or not?
					"true" : {
						// dialogue said before the action
						"before" : {"replace" : {"dialogueRandom" : [":oralVoreRequestedBefore"]}},
						// dialogue said after the action finishes
						"after" : {"replace" : {"dialogueRandom" : [":oralVoreRequestedAfter"]}}
					},
					"false" : {
						// if it wasn't, what was the reason? (arg2 returned by the action)
						"notFeelingIt" : {"replace" : {"dialogueRandom" : [":notFeelingIt"]}},
						"tooBig" : {"replace" : {"dialogueRandom" : [":tooBig"]}},
						"tooSmall" : {"replace" : {"dialogueRandom" : [":tooSmall"]}},
						"noSlots" : {"replace" : {"dialogueRandom" : [":noSlots"]}},
						"noSpace" : {
							"replace" : {"dialogueRandom" : [":oralVoreFull"]},
							"location" : "belly",
							"next" : ["location_compression","location_mainEffect"],
							"time" : {"replace" : {"dialogueRandom" : [":oralVoreCompressionFull"]}},
							"softDigest" : ".digest",
							"digest" : {"replace" : {"dialogueRandom" : [":oralVoreDigestFull"]}}
						},
						"invalidLocation" : ".error",
						"settingsMismatch" : ".error",
						"targetSettingsMismatch" : ".error",
						"targetPreySettingsMismatch" : {"replace":{"dialogueRandom":[":targetPreySettingsMismatch"]}}
					}
				}
			},
			// chance of saying one of these lines when one of their occupants struggles inside them
			"occupantStruggle" : {

			},

			// dialogue for when an occupant interacts with them, default just points to struggle lines
			"occupantInteract" : ".occupantStruggle",

			// lines for when a pred is eating prey, be it from hunting, or from it being requested
			// settings come from itself

			"vore" : {
				"new" : {
					"delay" : 1.5,
					"dismissTime" : 3,
					"hideVoreButtons" : true
				},
				"next" : "voreType",
				"oralVore" : {
					"next" : "voreResponse",
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":oralVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":oralVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dismissTime" : 30,
							"dialogueRandom" : [":oralVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".oralVore.selfRequest.response.yes" ],
								["No.", ".oralVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".oralVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":oralVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":oralVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":oralVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":oralVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":oralVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"tooBig" : {
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":oralVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":oralVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":oralVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"analVore" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":analVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":analVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":analVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":analVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":analVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".analVore.selfRequest.response.yes" ],
								["No.", ".analVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".analVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":analVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":analVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":analVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":analVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":analVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":analVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":analVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":analVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"tailVore" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":tailVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":tailVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":tailVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":tailVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":tailVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".tailVore.selfRequest.response.yes" ],
								["No.", ".tailVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".tailVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":tailVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":tailVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":tailVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":tailVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":tailVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":tailVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":tailVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":tailVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"navelVore" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":navelVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":navelVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":navelVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":navelVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":navelVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".navelVore.selfRequest.response.yes" ],
								["No.", ".navelVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".navelVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":navelVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":navelVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":navelVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":navelVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":navelVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":navelVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":navelVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":navelVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"absorbVore" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":absorbVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":absorbVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":absorbVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":absorbVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":absorbVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".absorbVore.selfRequest.response.yes" ],
								["No.", ".absorbVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".absorbVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":absorbVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":absorbVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":absorbVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":absorbVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":absorbVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":absorbVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":absorbVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":absorbVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"cockVore" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":cockVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":cockVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":cockVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":cockVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":cockVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".cockVore.selfRequest.response.yes" ],
								["No.", ".cockVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".cockVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":cockVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":cockVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":cockVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":cockVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":cockVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":cockVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":cockVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":cockVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"unbirth" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":unbirthVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":unbirthVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":unbirthVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":unbirthVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":selfRequestUnbirth"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".unbirth.selfRequest.response.yes" ],
								["No.", ".unbirth.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".unbirth.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":unbirthVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":unbirthVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":unbirthVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":unbirthVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":unbirthVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":unbirthVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":unbirthVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":unbirthVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				},
				"breastVore" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":breastVoreRequestedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":breastVoreRequestedAfter"]}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : {"dialogueRandom" : [":breastVoreUnpromptedBefore"]}
						},
						"after" : {
							"replace" : {"dialogueRandom" : [":breastVoreUnpromptedAfter"]}
						}
					},
					"selfRequest" : {
						"replace" : {
							"dialogueRandom" : [":breastVoreSelfRequest"],
							"buttonText" : ["[Y/N]"],
							"options" : [
								["Yes!", ".breastVore.selfRequest.response.yes" ],
								["No.", ".breastVore.selfRequest.response.no" ],
								["No... ^#555;(But actually Yes)", ".breastVore.selfRequest.response.noYes" ]
							]
						},
						"response" : {
							"yes" : {
								"new" : {
									"dialogueRandom" : [":breastVoreSelfRequestYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":breastVoreSelfRequestYesAfter"],
										"dismissTime" : 2
									}
								}
							},
							"no" : {
								"new" : {
									"dialogueRandom" : [":breastVoreSelfRequestNo"],
									"dismissTime" : 2
								}
							},
							"noYes" : {
								"new" : {
									"dialogueRandom" : [":breastVoreSelfRequestNoYes"],
									"dismissTime" : 2
								},
								"next" : ["queueVore"],
								"after" : {
									"new" : {
										"dialogueRandom" : [":breastVoreSelfRequestNoYesAfter"],
										"dismissTime" : 2
									}
								}
							}
						}
					},
					"notFeelingIt" : {
						"replace" : {"dialogueRandom" : [":notFeelingIt"]}
					},
					"tooBig" : {
						"replace" : {"dialogueRandom" : [":tooBig"]}
					},
					"tooSmall" : {
						"replace" : {"dialogueRandom" : [":tooSmall"]}
					},
					"full" : {
						"replace" : {"dialogueRandom" : [":breastVoreFull"]},
						"next" : [
							"locationEffectSlot",
							"locationCompression"
						],
						"softDigest" : ".digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":breastVoreDigestFull"]}
						},
						"time" : { // compression
							"queueReplace" : {"dialogueRandom" : [":breastVoreCompressionFull"]},
							"addQueued" : true
						}
					},
					"otherLocationFull" : {
						"replace" : {"dialogueRandom" : [":full"]}
					},
					"needsInfusion" : {
						"replace" : {"dialogueRandom" : [":needsInfusion"]}
					}
				}

			},

			// when being pred, responses to the prey struggling inside
			// settings come from itself, prey settings come from prey
			"struggle" : {
				"new" : {
					"hideVoreButtons" : true,
					"dialogueRandom" : [":struggle"]
				},
				"next" : "location",
				"any" : {
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":transformingStruggle"]},
						"addQueued" : true,
						"next" : "transformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":transformingStruggleImmune"]}}
					}},
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":eggifyStruggle"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":eggifyStruggleImmune"]}}
					}}
				},
				"taurBelly" : ".belly",
				"belly" : {
					"replace" : {
						"dialogueRandom" : [":struggle"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":digestStruggle"]},
							"next" : "digestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":digestStruggleImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":healStruggle"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":compressionStruggle"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":energyDrainStruggle"]}}},
					"transforming" : ".struggle.any.transforming",
					"eggify" : ".struggle.any.eggify"
				},
				"tail" : {
					"replace" : {
						"dialogueRandom" : [":struggle"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":digestStruggle"]},
							"next" : "digestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":digestStruggleImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":healStruggle"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":compressionStruggle"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":energyDrainStruggle"]}}},
					"transforming" : ".struggle.any.transforming",
					"eggify" : ".struggle.any.eggify"
				},
				"womb" : {
					"replace" : {
						"dialogueRandom" : [":wombDefaultStruggle"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":wombDigestStruggle"]},
							"next" : "femcumDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":wombDigestStruggleImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":wombHealStruggle"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":wombCompressionStruggle"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":wombEnergyDrainStruggle"]}}},
					"transforming" : ".struggle.any.transforming",
					"eggify" : ".struggle.any.eggify"
				},
				"cock" : ".shaft",
				"shaft" : {
					"replace" : {
						"dialogueRandom" : [":shaftDefaultStruggle"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming",
						"locationInfused"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":shaftDigestStruggle"]},
							"next" : "cumDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":shaftDigestStruggleImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":shaftHealStruggle"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":shaftCompressionStruggle"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":shaftEnergyDrainStruggle"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":cumTransformingStruggle"]},
						"addQueued" : true,
						"next" : "cumTransformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":cumTransformingStruggleImmune"]}}
					}},
					"eggify" : ".struggle.any.eggify",
					"locationInfused" : {
						"true" : {
							"add" : { "dialogueRandom" : [":shaftInfusedStruggle"]}
						}
					}
				},
				"ballsL" : ".balls",
				"ballsR" : ".balls",
				"balls" : {
					"replace" : {
						"dialogueRandom" : [":ballsDefaultStruggle"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":ballsDigestStruggle"]},
							"next" : "cumDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":ballsDigestStruggleImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":ballsHealStruggle"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":ballsCompressionStruggle"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":ballsEnergyDrainStruggle"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":cumTransformingStruggle"]},
						"addQueued" : true,
						"next" : "cumTransformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":cumTransformingStruggleImmune"]}}
					}},
					"eggify" : ".struggle.any.eggify"
				},
				"breastsL" : ".breasts",
				"breastsR" : ".breasts",
				"breasts" : {
					"replace" : {
						"dialogueRandom" : [":breastsDefaultStruggle"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming",
						"shirt"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":breastsDigestStruggle"]},
							"next" : ["milkDigestImmunity"],
							"true" : {"replace" : {"dialogueRandom" : [":breastsDigestStruggleImmune"]}}
						},
						"heal" : {
							"replace" : {"dialogueRandom" : [":breastsHealStruggle"]}
						}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":breastsCompressionStruggle"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":breastsEnergyDrainStruggle"]}}},
					"transforming" : ".struggle.any.transforming",
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":eggifyStruggle"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":eggifyStruggleImmune"]}}
					}},
					"shirt" : {
						"true" : {
							"queueReplace" : {"dialogueRandom": [":breastsDefaultStruggleShirt"]},
							"addQueued" : true
						}
					}
				}
			},

			// when being pred, responses to the prey escaping
			// settings come from itself, prey settings come from the prey
			"letout" : {
				"next" : "struggleTrigger",
				"true" : { // prey struggled out
					"next" : "voreType",
					"any" : {
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":letoutStruggleTransforming"]},
							"addQueued" : true,
							"next" : ["transformAllow"],
							"false" : {"queueReplace":{"dialogueRandom" : [":letoutStruggleTransformingImmune"]}}
						}},
						"eggify" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":letoutStruggleEggify"]},
							"addQueued" : true,
							"next" : "eggAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":letoutStruggleEggifyImmune"]}}
						}}
					},
					"oralVore" : {
						"replace" : {
							"dialogueRandom" : [":oralVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":oralVoreLetoutStruggleDigested"]
								},
								"finished" : true

							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":oralVoreLetoutStruggleDigest"]},
								"next" : ["digestImmunity"],
								"true" : {
									"replace" : {"dialogueRandom" : [":oralVoreLetoutStruggleDigestImmune"]}
								},
								"shy" : { "replace" : {"dialogueRandom" : [":oralVoreLetoutShyStruggleDigest"]}},
								"flirty" : { "replace" : {"dialogueRandom" : [":oralVoreLetoutFlirtyStruggleDigest"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":oralVoreLetoutStruggleSoftDigest"]},
								"next" : ["digestImmunity"],
								"true" : {
									"replace" : {"dialogueRandom" : [":oralVoreLetoutStruggleDigestImmune"]}
								},
								"shy" : { "replace" : {"dialogueRandom" : [":oralVoreLetoutShyStruggleDigest"]}},
								"flirty" : { "replace" : {"dialogueRandom" : [":oralVoreLetoutFlirtyStruggleDigest"]}}
							},
							"heal" : {
								"replace" : {"dialogueRandom" : [":oralVoreLetoutStruggleHeal"]}
							}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					},
					"analVore" : {
						"replace" : {
							"dialogueRandom" : [":analVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":analVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":analVoreLetoutStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":analVoreLetoutStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":analVoreLetoutStruggleHeal"]}}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					},
					"tailVore" : {
						"replace" : {
							"dialogueRandom" : [":tailVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":tailVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":tailVoreLetoutStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":tailVoreLetoutStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":tailVoreLetoutStruggleHeal"]}}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					},
					"navelVore" : {
						"replace" : {
							"dialogueRandom" : [":navelVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":navelVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":navelVoreLetoutStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":navelVoreLetoutStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":navelVoreLetoutStruggleHeal"]}}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					},
					"absorbVore" : {
						"replace" : {
							"dialogueRandom" : [":absorbVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":absorbVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreLetoutStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreLetoutStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":absorbVoreLetoutStruggleHeal"]}}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					},
					"cockVore" : {
						"replace" : {
							"dialogueRandom" : [":cockVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":cockVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":cockVoreLetoutStruggleDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":cockVoreLetoutStruggleSoftDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":cockVoreLetoutStruggleHeal"]}}
						},
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":letoutStruggleCumTransforming"]},
							"addQueued" : true,
							"next" : ["cumTransformAllow"],
							"false" : {"queueReplace":{"dialogueRandom" : [":letoutStruggleCumTransformingImmune"]}}
						}},
						"eggify" : ".letout.true.any.eggify"
					},
					"unbirth" : {
						"replace" : {
							"dialogueRandom" : [":unbirthVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":unbirthVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreLetoutStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreLetoutStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":unbirthVoreLetoutStruggleHeal"]}}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					},
					"breastVore" : {
						"replace" : {
							"dialogueRandom" : [":breastVoreLetoutStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":breastVoreLetoutStruggleDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":breastVoreLetoutStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreLetoutStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":breastVoreLetoutStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreLetoutStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":breastVoreLetoutStruggleHeal"]}}
						},
						"transforming" : ".letout.true.any.transforming",
						"eggify" : ".letout.true.any.eggify"
					}
				},
				"false" : { // pred let prey out
					"next" : "voreType",
					"any" : {
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":letoutTransforming"]},
							"addQueued" : true,
							"next" : "transformAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":letoutTransformingImmune"]}}
						}},
						"eggify" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":letoutEggify"]},
							"addQueued" : true,
							"next" : "eggAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":letoutEggifyImmune"]}}
						}}
					},
					"oralVore" : {
						"replace" : {
							"dialogueRandom" : [":oralVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":oralVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":oralVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":oralVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":oralVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":oralVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":oralVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"

					},
					"analVore" : {
						"replace" : {
							"dialogueRandom" : [":analVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":analVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":analVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":analVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":analVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"

					},
					"tailVore" : {
						"replace" : {
							"dialogueRandom" : [":tailVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":tailVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":tailVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":tailVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":tailVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"
					},
					"navelVore" : {
						"replace" : {
							"dialogueRandom" : [":navelVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":navelVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":navelVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":navelVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":navelVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"

					},
					"absorbVore" : {
						"replace" : {
							"dialogueRandom" : [":absorbVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":absorbVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":absorbVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"
					},
					"cockVore" : {
						"replace" : {
							"dialogueRandom" : [":cockVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":cockVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":cockVoreLetoutDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":cockVoreLetoutSoftDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":cockVoreLetoutHeal"]}}
						},
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":letoutCumTransforming"]},
							"addQueued" : true,
							"next" : "cumTransformAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":letoutCumTransformingImmune"]}}
						}},
						"eggify" : ".letout.false.any.eggify"
					},
					"unbirth" : {
						"replace" : {
							"dialogueRandom" : [":letoutUnbirth"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":unbirthVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":unbirthVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"
					},
					"breastVore" : {
						"replace" : {
							"dialogueRandom" : [":breastVoreLetout"]
						},
						"seperateNext" : true,
						"next" : [
							"digested",
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"digested" : {
							"true" : {
								"replace" : {
									"dialogueRandom" : [":breastVoreLetoutDigested"]
								},
								"finished" : true
							}
						},
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":breastVoreLetoutDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreLetoutDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":breastVoreLetoutSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreLetoutDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":breastVoreLetoutHeal"]}}
						},
						"transforming" : ".letout.false.any.transforming",
						"eggify" : ".letout.false.any.eggify"
					}
				}
			},

			// for when an NPC is requesting a player or other NPC eats them
			"preyRequest" : {
				"next" : "voreType",
				"new" : {
					"hideVoreButtons" : true
				},
				"oralVore" : {
					"replace" : {
						"dialogueRandom" : [":oralVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".oralVore.response.yes" ],
							["No.", ".oralVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".oralVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":oralVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":oralVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":oralVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"tailVore" : {
					"replace" : {
						"dialogueRandom" : [":tailVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".tailVore.response.yes" ],
							["No.", ".tailVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".tailVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":tailVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":tailVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":tailVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"analVore" : {
					"replace" : {
						"dialogueRandom" : [":analVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".analVore.response.yes" ],
							["No.", ".analVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".analVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":analVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":analVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":analVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"navelVore" : {
					"replace" : {
						"dialogueRandom" : [":navelVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".navelVore.response.yes" ],
							["No.", ".navelVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".navelVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":navelVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":navelVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":navelVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"absorbVore" : {
					"replace" : {
						"dialogueRandom" : [":absorbVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".absorbVore.response.yes" ],
							["No.", ".absorbVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".absorbVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":absorbVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":absorbVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":absorbVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"unbirth" : {
					"replace" : {
						"dialogueRandom" : [":preyRequestUnbirth"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".unbirth.response.yes" ],
							["No.", ".unbirth.response.no" ],
							["No... ^#555;(But actually Yes)", ".unbirth.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":unbirthVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":unbirthVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":unbirthVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"cockVore" : {
					"replace" : {
						"dialogueRandom" : [":cockVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".cockVore.response.yes" ],
							["No.", ".cockVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".cockVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":cockVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":cockVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":cockVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				},
				"breastVore" : {
					"replace" : {
						"dialogueRandom" : [":breastVorePreyRequest"],
						"buttonText" : ["[Y/N]"],
						"options" : [
							["Yes!", ".breastVore.response.yes" ],
							["No.", ".breastVore.response.no" ],
							["No... ^#555;(But actually Yes)", ".breastVore.response.noYes" ]
						]
					},
					"seperateNext" : true,
					"response" : {
						"yes" : {
							"new" : {
								"dialogueRandom" : [":breastVorePreyRequestYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						},
						"no" : {
							"new" : {
								"dialogueRandom" : [":breastVorePreyRequestNo"],
								"dismissTime" :2
							}
						},
						"noYes" : {
							"new" : {
								"dialogueRandom" : [":breastVorePreyRequestNoYes"],
								"dismissTime" :2
							},
							"next" : ["queuePrey"]
						}
					}
				}
			},
			// for when being prey and forcing their way into a pred without asking
			"forcingPrey" : {
				"new" : {},
				"next" : "voreType",
				"oralVore" : {
					"replace" : { "dialogueRandom" : [":oralVoreForcingPrey"]}
				},
				"tailVore" : {
					"replace" : { "dialogueRandom" : [":tailVoreForcingPrey"]}
				},
				"absorbVore" : {
					"replace" : { "dialogueRandom" : [":absorbVoreForcingPrey"]}
				},
				"navelVore" : {
					"replace" : { "dialogueRandom" : [":navelVoreForcingPrey"]}
				},
				"analVore" : {
					"replace" : { "dialogueRandom" : [":analVoreForcingPrey"]}
				},
				"cockVore" : {
					"replace" : { "dialogueRandom" : [":cockVoreForcingPrey"]}
				},
				"unbirth" : {
					"replace" : { "dialogueRandom" : [":forcingPreyUnbirth"]}
				},
				"breastVore" : {
					"replace" : { "dialogueRandom" : [":breastVoreForcingPrey"]}
				}
			},
			// when being pred, response to prey forcing their way in unwillingly
			"unwillingPred" : {
				"new" : {},
				"next" : "voreType",
				"oralVore" : {
					"replace" : { "dialogueRandom" : [":oralVoreUnwillingPred"]}
				},
				"tailVore" : {
					"replace" : { "dialogueRandom" : [":tailVoreUnwillingPred"]}
				},
				"absorbVore" : {
					"replace" : { "dialogueRandom" : [":absorbVoreUnwillingPred"]}
				},
				"navelVore" : {
					"replace" : { "dialogueRandom" : [":navelVoreUnwillingPred"]}
				},
				"analVore" : {
					"replace" : { "dialogueRandom" : [":analVoreUnwillingPred"]}
				},
				"cockVore" : {
					"replace" : { "dialogueRandom" : [":cockVoreUnwillingPred"]}
				},
				"unbirth" : {
					"replace" : { "dialogueRandom" : [":unwillingPredUnbirth"]}
				},
				"breastVore" : {
					"replace" : { "dialogueRandom" : [":breastVoreUnwillingPred"]}
				}
			},

			// when being prey, responses to the pred that ate them as they struggle
			// settings come from the pred, prey settings comes from itself
			"struggling" : {
				"new" : {
					"hideVoreButtons" : true,
					"dialogueRandom" : [":struggling"]
				},
				"next" : ["predator","location"],
				"sbqSlime" : {
					"replace" : {
						"dialogueRandom" : [":strugglingSlime"]
					},
					"finished" : true,
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationEnergyDrain",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":sstrugglingSlimeDigest"]},
							"next" : "digestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingSlimeDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingSlimeHeal"]}}
					},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingSlimeTransforming"]},
						"addQueued" : true,
						"next" : "transformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":transformingStruggleImmune"]}}
					}}
				},
				"taurBelly" : ".belly",
				"belly" : {
					"replace" : {
						"dialogueRandom" : [":strugglingBelly"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":strugglingBellyDigest"]},
							"next" : "digestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingBellyDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingBellyHeal"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":strugglingBellyCompression"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingBellyEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingBellyTransforming"]},
						"addQueued" : true,
						"next" : "transformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingTransformingImmune"]}}
					}},
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingBellyEggify"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingEggifyImmune"]}}
					}}
				},
				"tail" : {
					"replace" : {
						"dialogueRandom" : [":strugglingTail"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":strugglingTailDigest"]},
							"next" : "digestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingTailDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingTailHeal"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":strugglingTailCompression"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingTailEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingTailTransforming"]},
						"addQueued" : true,
						"next" : "transformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingTransformingImmune"]}}
					}},
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingTailEggify"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingEggifyImmune"]}}
					}}
				},
				"womb" : {
					"replace" : {
						"dialogueRandom" : [":strugglingWomb"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":strugglingWombDigest"]},
							"next" : "femcumDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingWombDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingWombHeal"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":strugglingWombCompression"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingWombEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingWombTransforming"]},
						"addQueued" : true,
						"next" : "transformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingTransformingImmune"]}}
					}},
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingWombEggify"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingEggifyImmune"]}}
					}}
				},
				"cock" : ".shaft",
				"shaft" : {
					"replace" : {
						"dialogueRandom" : [":strugglingShaft"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":strugglingShaftDigest"]},
							"next" : "cumDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingShaftDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingShaftHeal"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":strugglingShaftCompression"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingShaftEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingShaftCumTransforming"]},
						"addQueued" : true,
						"next" : "cumTransformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingCumTransformingImmune"]}}
					}},
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingShaftEggify"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingEggifyImmune"]}}
					}}
				},
				"ballsL" : ".balls",
				"ballsR" : ".balls",
				"balls" : {
					"replace" : {
						"dialogueRandom" : [":strugglingBalls"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":strugglingBallsDigest"]},
							"next" : "cumDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingBallsDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingBallsHeal"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":strugglingBallsCompression"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingBallsEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingBallsCumTransforming"]},
						"addQueued" : true,
						"next" : "cumTransformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingCumTransformingImmune"]}}
					}},
					"eggify" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingBallsEggify"]},
						"addQueued" : true,
						"next" : "eggAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingEggifyImmune"]}}
					}}
				},
				"breastsL" : ".breasts",
				"breastsR" : ".breasts",
				"breasts" : {
					"replace" : {
						"dialogueRandom" : [":strugglingBreasts"]
					},
					"seperateNext" : true,
					"next" : [
						"locationEffectSlot",
						"locationCompression",
						"locationEnergyDrain",
						"eggify",
						"transforming"
					],
					"locationEffectSlot" : {
						"softDigest" : ".locationEffectSlot.digest",
						"digest" : {
							"replace" : {"dialogueRandom" : [":strugglingBreastsDigest"]},
							"next" : "milkDigestImmunity",
							"true" : {"replace" : {"dialogueRandom" : [":strugglingBreastsDigestImmune"]}}
						},
						"heal" : { "replace" : {"dialogueRandom" : [":strugglingBreastsHeal"]}}
					},
					"locationCompression" : { "time" : { "add" : { "dialogueRandom" : [":strugglingBreastsCompression"]}}},
					"locationEnergyDrain" : { "true" : { "add" : { "dialogueRandom" : [":strugglingBreastsEnergyDrain"]}}},
					"transforming" : {"true" : {
						"queueReplace" : {"dialogueRandom" : [":strugglingBreastsTransforming"]},
						"addQueued" : true,
						"next" : "transformAllow",
						"false" : {"queueReplace":{"dialogueRandom" : [":strugglingTransformingImmune"]}}
					}}
				}
			},

			// when being prey, responses to the pred thats eating them
			// settings come from the pred, prey settings comes from itself
			"vored" : {
				"new" : {},
				"next" : "willing",
				"true" : {
					"next" : "voreType",
					"oralVore" : {"replace":{"dialogueRandom":[":oralVoreVoredWilling"]}},
					"analVore" : {"replace":{"dialogueRandom":[":analVoreVoredWilling"]}},
					"tailVore" : {"replace":{"dialogueRandom":[":tailVoreVoredWilling"]}},
					"navelVore" : {"replace":{"dialogueRandom":[":navelVoreVoredWilling"]}},
					"absorbVore" : {"replace":{"dialogueRandom":[":absorbVoreVoredWilling"]}},
					"cockVore" : {"replace":{"dialogueRandom":[":cockVoreVoredWilling"]}},
					"unbirth" : {"replace":{"dialogueRandom":[":unbirthVoreVoredWilling"]}},
					"breastVore" : {"replace":{"dialogueRandom":[":breastVoreVoredWilling"]}}
				},
				"false" : {
					"next" : "voreType",
					"oralVore" : {"replace":{"dialogueRandom":[":oralVoreVored"]}},
					"analVore" : {"replace":{"dialogueRandom":[":analVoreVored"]}},
					"tailVore" : {"replace":{"dialogueRandom":[":tailVoreVored"]}},
					"navelVore" : {"replace":{"dialogueRandom":[":navelVoreVored"]}},
					"absorbVore" : {"replace":{"dialogueRandom":[":absorbVoreVored"]}},
					"cockVore" : {"replace":{"dialogueRandom":[":cockVoreVored"]}},
					"unbirth" : {"replace":{"dialogueRandom":[":voredUnbirth"]}},
					"breastVore" : {"replace":{"dialogueRandom":[":breastVoreVored"]}}
				}
			},

			// when being prey, responses to the pred letting them out
			// settings come from the pred, prey settings comes from itself
			"escape" : {
				"next" : "struggleTrigger",
				"true" : { // prey struggled out
					"next" : "voreType",
					"any" : {
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeStruggleTransforming"]},
							"addQueued" : true,
							"next" : "transformAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeStruggleTransformingImmune"]}}
						}},
						"eggify" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeStruggleEggify"]},
							"addQueued" : true,
							"next" : "eggAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeStruggleEggifyImmune"]}}
						}}
					},
					"oralVore" : {
						"replace" : {
							"dialogueRandom" : [":oralVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":oralVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":oralVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":oralVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":oralVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":oralVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					},
					"analVore" : {
						"replace" : {
							"dialogueRandom" : [":analVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":analVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":analVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":analVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					},
					"tailVore" : {
						"replace" : {
							"dialogueRandom" : [":tailVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":tailVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":tailVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":tailVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					},
					"navelVore" : {
						"replace" : {
							"dialogueRandom" : [":navelVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":navelVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":navelVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":navelVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					},
					"absorbVore" : {
						"replace" : {
							"dialogueRandom" : [":absorbVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":absorbVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					},
					"cockVore" : {
						"replace" : {
							"dialogueRandom" : [":cockVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":cockVoreEscapeStruggleDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":cockVoreEscapeStruggleSoftDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":cockVoreEscapeStruggleHeal"]}}
						},
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeStruggleCumTransforming"]},
							"addQueued" : true,
							"next" : "cumTransformAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeStruggleCumTransformingImmune"]}}
						}},
						"eggify" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeStruggleEggify"]},
							"addQueued" : true,
							"next" : "eggAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeStruggleEggifyImmune"]}}
						}}
					},
					"unbirth" : {
						"replace" : {
							"dialogueRandom" : [":unbirthVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":unbirthVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					},
					"breastVore" : {
						"replace" : {
							"dialogueRandom" : [":breastVoreEscapeStruggle"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":breastVoreEscapeStruggleDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreEscapeStruggleDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":breastVoreEscapeStruggleSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreEscapeStruggleDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":breastVoreEscapeStruggleHeal"]}}
						},
						"transforming" : ".escape.true.any.transforming",
						"eggify" : ".escape.true.any.eggify"
					}
				},
				"false" : { // pred let prey out
					"next" : "voreType",
					"any" : {
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeTransforming"]},
							"addQueued" : true,
							"next" : "transformAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeTransformingImmune"]}}
						}},
						"eggify" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeEggify"]},
							"addQueued" : true,
							"next" : "eggAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeEggifyImmune"]}}
						}}
					},
					"oralVore" : {
						"replace" : {
							"dialogueRandom" : [":oralVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":oralVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":oralVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":oralVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":oralVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":oralVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					},
					"analVore" : {
						"replace" : {
							"dialogueRandom" : [":analVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":analVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":analVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":analVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":analVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					},
					"tailVore" : {
						"replace" : {
							"dialogueRandom" : [":tailVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":tailVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":tailVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":tailVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":tailVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					},
					"navelVore" : {
						"replace" : {
							"dialogueRandom" : [":navelVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":navelVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":navelVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":navelVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":navelVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					},
					"absorbVore" : {
						"replace" : {
							"dialogueRandom" : [":absorbVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":absorbVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":absorbVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":absorbVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					},
					"cockVore" : {
						"replace" : {
							"dialogueRandom" : [":cockVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":cockVoreEscapeDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":cockVoreEscapeSoftDigest"]},
								"next" : "cumDigestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":cockVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":cockVoreEscapeHeal"]}}
						},
						"transforming" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeCumTransforming"]},
							"addQueued" : true,
							"next" : "cumTransformAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeCumTransformingImmune"]}}
						}},
						"eggify" : {"true" : {
							"queueReplace" : {"dialogueRandom" : [":escapeEggify"]},
							"addQueued" : true,
							"next" : "eggAllow",
							"false" : {"queueReplace":{"dialogueRandom" : [":escapeEggifyImmune"]}}
						}}
					},
					"unbirth" : {
						"replace" : {
							"dialogueRandom" : [":escapeUnbirth"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":unbirthVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":unbirthVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":unbirthVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					},
					"breastVore" : {
						"replace" : {
							"dialogueRandom" : [":breastVoreEscape"]
						},
						"seperateNext" : true,
						"next" : [
							"locationEffectSlot",
							"eggify",
							"transforming"
						],
						"locationEffectSlot" : {
							"digest" : {
								"replace" : {"dialogueRandom" : [":breastVoreEscapeDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreEscapeDigestImmune"]}}
							},
							"softDigest" : {
								"replace" : {"dialogueRandom" : [":breastVoreEscapeSoftDigest"]},
								"next" : "digestImmunity",
								"true" : {"replace" : {"dialogueRandom" : [":breastVoreEscapeDigestImmune"]}}
							},
							"heal" : { "replace" : {"dialogueRandom" : [":breastVoreEscapeHeal"]}}
						},
						"transforming" : ".escape.false.any.transforming",
						"eggify" : ".escape.false.any.eggify"
					}
				}
			},

			// lines for when an NPC infuses someone (CTF, Boobsorb, etc.)
			"infusePrey" : {
				"new" : {"dismissTime" : 2},
				"next" : "location",
				"belly" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseRequestBellyBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestBellyBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseRequestBellyAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestBellyAfterLayer"]}}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedBellyBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedBellyBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedBellyAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedBellyAfterLayer"]}}
						}
					},
					"notFeelingIt" : { "replace" : {"dialogueRandom" : [":notFeelingIt"]} }

				},
				"tail" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseRequestTailBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestTailBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseRequestTailAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestTailAfterLayer"]}}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedTailBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedTailBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedTailAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedTailAfterLayer"]}}
						}
					},
					"notFeelingIt" : { "replace" : {"dialogueRandom" : [":notFeelingIt"]} }

				},
				"breastsL" : ".breasts",
				"breastsR" : ".breasts",
				"breasts" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseRequestBreastsBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestBreastsBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseRequestBreastsAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestBreastsAfterLayer"]}}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedBreastsBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedBreastsBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedBreastsAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedBreastsAfterLayer"]}}
						}
					},
					"notFeelingIt" : { "replace" : {"dialogueRandom" : [":notFeelingIt"]} }

				},
				"womb" : ".pussy",
				"pussy" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseRequestPussyBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestPussyBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseRequestPussyAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestPussyAfterLayer"]}}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedPussyBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedPussyBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedPussyAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedPussyAfterLayer"]}}
						}
					},
					"notFeelingIt" : { "replace" : {"dialogueRandom" : [":notFeelingIt"]} }

				},
				"cock" : ".shaft",
				"shaft" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseRequestShaftBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestShaftBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseRequestShaftAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestShaftAfterLayer"]}}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedShaftBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedShaftBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedShaftAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedShaftAfterLayer"]}}
						}
					},
					"notFeelingIt" : { "replace" : {"dialogueRandom" : [":notFeelingIt"]} }

				},
				"ballsL" : ".balls",
				"ballsR" : ".balls",
				"balls" : {
					"next" : "voreResponse",
					"request" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseRequestBallsBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestBallsBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseRequestBallsAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseRequestBallsAfterLayer"]}}
						}
					},
					"unprompted" : {
						"next" : "doingVore",
						"before" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedBallsBefore"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedBallsBeforeLayer"]}}
						},
						"after" : {
							"replace" : { "dialogueRandom" : [":infuseUnpromptedBallsAfter"]},
							"next" : "infuselayered",
							"true" : {"replace" : { "dialogueRandom" : [":infuseUnpromptedBallsAfterLayer"]}}
						}
					},
					"notFeelingIt" : { "replace" : {"dialogueRandom" : [":notFeelingIt"]} }
				}
			},

			// lines for when a character is infused (CTF Boobsorb etc.)
			// settings for personality and race and mood would come from the infused character, things like location effect and etc would come from the pred
			"infused" : {
				"new" : {
					"dialogueRandom":[":infused"],
					"hideVoreButtons" : true
				},
				"next" : "location",
				"belly" : {"replace" :{"dialogueRandom" : [":infusedBelly"]}},
				"tail" : {"replace" :{"dialogueRandom" : [":infusedTail"]}},
				"womb":".pussy",
				"pussy" : {"replace" :{"dialogueRandom" : [":infusedPussy"]}},
				"breastsL":".breasts",
				"breastsR":".breasts",
				"breasts" : {"replace" :{"dialogueRandom" : [":infusedBreasts"]}},
				"cock":".shaft",
				"shaft" : {"replace" :{"dialogueRandom" : [":infusedShaft"]}},
				"ballsL":".balls",
				"ballsR":".balls",
				"balls" : {"replace" :{"dialogueRandom" : [":infusedBalls"]}}
			},

			// lines for when a character is infused (CTF Boobsorb etc.) the pred teasing their occupant
			// the <infusedName> tag can also be used in any of the above vore context to use the name of the infused character, just make sure to have the lines within a special check for it
			"teaseInfused" : {
				"new" : {
					"dialogueRandom":[":teaseInfused"],
					"hideVoreButtons" : true
				},
				"next" : "location",
				"belly" : {"replace" :{"dialogueRandom" : [":teaseInfusedBelly"]}},
				"tail" : {"replace" :{"dialogueRandom" : [":teaseInfusedTail"]}},
				"womb":".pussy",
				"pussy" : {"replace" :{"dialogueRandom" : [":teaseInfusedPussy"]}},
				"breastsL":".breasts",
				"breastsR":".breasts",
				"breasts" : {"replace" :{"dialogueRandom" : [":teaseInfusedBreasts"]}},
				"cock":".shaft",
				"shaft" : {"replace" :{"dialogueRandom" : [":teaseInfusedShaft"]}},
				"ballsL":".balls",
				"ballsR":".balls",
				"balls" : {"replace" :{"dialogueRandom" : [":teaseInfusedBalls"]}}
			},

			// a line of dialogue triggered when size is changed by the size ray or something else
			"sizeChanged" : {
				"new" : {},
				"next":"shrinkOrGrow",
				"shrink" :{"replace" : {"dialogueRandom":[":shrinking"]}},
				"grow" :{"replace" : {"dialogueRandom":[":growing"]}}
			},
			// when stepping on a character small enough
			"didSteppy" : {
				"new" : {"dialogueRandom":[":didSteppy"]}
			},

			// when stepped on by a larger character
			"gotSteppy" : {
				"new" : {"dialogueRandom":[":gotStepped"]},
				"next" : "steppyType",
				"falling" :{"replace" : {"dialogueRandom":[":gotStomped"]}}
			}
		},
		// below is the dialogue triggered by vanilla scripts, it has a rather simple structure, all the dialogue is in the external file
		"dialog": {
			"tenant": {
				"grumbles": {
					"tagCriteria": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.tagCriteria",
					"enclosedArea": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.enclosedArea",
					"otherDeed": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.otherDeed",
					"severe": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.severe",
					"final": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.final"
				},
				"arrivedHome": {
					"beacon": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.beacon",
					"rent": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.rent"
				}
			},
			"flee": {
				"helpme": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.helpme",
				"safe": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.safe"
			},
			"accuse": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.accuse",
			"alert": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.alert",
			"attack" : "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.attack",
			"reattack" : "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.reattack",
			"killedTarget" : "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.killedTarget",
			"lostTarget" : "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.lostTarget",
			"outOfSight" : "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.outOfSight",
			"cheerOn" : "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.cheerOn",
			"cantreach": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.cantReachEnemy",
			"crewmember": {
				"offer": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.offer",
				"roleDescription": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.roleDescription",
				"respawned": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.respawned",
				"cantreach": "/npcs/tenants/sbq/ocs/sbqtemplate.dialogue:vanilla.crewcantreach"
			}
		},
		// sounds your NPC makes when speaking
		"chatSounds": {
			"default": {
				"male": [
					"/sfx/humanoid/human_chatter_male1.ogg",
					"/sfx/humanoid/human_chatter_male2.ogg",
					"/sfx/humanoid/human_chatter_male3.ogg"
				],
				"female": [
					"/sfx/humanoid/human_chatter_female1.ogg",
					"/sfx/humanoid/human_chatter_female2.ogg",
					"/sfx/humanoid/human_chatter_female3.ogg"
				]
			}
		},

		// the pred prefrences and general settings for this NPC are set here!
		// set each one to the value you want, if there are any that are unset, they'll just go to the default values

		"sbqDefaultSettings" : {
			"mood" : "default",
			"personality" : "default",

			"bellyEffectSlot" : "none", // the settings in this group exist for each location, just use the correct name (belly, balls, shaft, womb, tail, breasts)
			//"bellyHammerspaceDisabled" : false,
			//"bellyVisualMin" : 0,
			//"bellyVisualMax" : 2,
			//"bellyNoneEnable" : true,
			//"bellyHealEnable" : true,
			//"bellyDigestEnable" : true,
			//"bellySoftDigestEnable" : true,
			//"bellyDifficultyMod" : 0,
			//"bellyPredDigestDrop" : false,
			"bellySounds" : true,

			"displayDigest" : false,

			"escapeDifficulty": 0,
			"escapeDifficultyMin": 0,
			"escapeDifficultyMax": 0,

			"impossibleEscape": false,
			"hammerspace" : false,

			// predator prefrences
			"oralVorePred" : true,
			"tailVorePred" : false,
			"absorbVorePred" : false,
			"navelVorePred" : false,

			"analVorePred" : false,
			"unbirthVorePred" : false,
			"cockVorePred" : false,
			"breastVorePred" : false,

			"bellyInfusionPred" : false,
			"cockInfusionPred" : false,
			"pussyInfusionPred" : false,
			"breastsInfusionPred" : false
		},

		// any setting you define above can be modified by a player, this table allows you to define settings a player *cannot* modify, making sure your OC is always in line with your prefrences
		"sbqOverrideSettings" : {
			"crewmateGraduation" : false

		},
		// prey enabled settings are down below, but here are the override settings, which follow the same rules as below, however, a player is *not* allowed to modify any of these settings
		// this is how you can enforce your OC only being prey for things they enjoy, or if they're prey at all
		"sbqOverridePreyEnabled" : {

		},

		// rewards given to the player for doing things for the pred are here! cumulative ones accumulate time between different sessions, otherwise it only counts up per the current session
		// you can make a reward take both per session time as well as cumulative time!
		"sbqPredRewards" : {
			// Time is in minutes here!

			/*
			"exampleReward" : { // example reward that uses all possible args
				"repeatable" : true, // whether this reward repeats each time its requirements are met, a 5min reward would repeat at 10min and etc
				"location" : ["belly", "womb", "shaft", "balls", "breasts", "tail"], // whether the counters for this are for a specific location, it adds the timers and counters for all the locations listed in this arg, otherwise its just the overall count/time
				"pool" : "richOre", // the treasure pool this reward gives the player, look up how these are defined, make sure they don't conflict in name https://starbounder.org/Data:Assets/treasurepools

				"minStruggleFor" : 1, // the minimum amount of time (seconds) a contininious struggle is needed to trigger this reward
				"struggleFor" : 5, // the amount of time (seconds) a continious struggle is needed for this reward to trigger for each repeat
				"maxStruggleFor" : 10, // the maximum amount of time (seconds) of a contininious struggle this reward can be obtained at

				"minSinceStruggle" : 1, // the minimum amount of time (seconds) since last struggle is needed to trigger this reward
				"sinceStruggle" : 5, // the amount of time (seconds) since last struggle is needed for this reward to trigger for each repeat
				"maxSinceStruggle" : 10, // the maximum amount of time (seconds) since last struggle this reward can be obtained at

				// per session, resets each time you escape the pred

				"minTime" : 1, // the minimum amount of time (minutes) in this session before this reward can be obtained
				"time" : 5, // the amount of time (minutes) needed for this reward to trigger and between each repeat
				"maxTime" : 10, // the maximum amount of time (minutes) in this session this reward can be obtained at

				"minStruggles" : 1, // the minimum amount of struggles (seconds) before this reward can be obtained
				"struggles" : 10, // the amount of struggles (seconds) for this reward to trigger between each repeat
				"maxStruggles" : 1, // the maximum amount of struggles (seconds) in this session this reward can be obtained at

				// cumulative, they never reset, and will continue to count up every time you are in this specific pred

				"minTimeCumulative" : 1, // the minimum amount of time (minutes) before this reward can be obtained
				"timeCumulative" : 5, // the amount of time (minutes) needed for this reward to trigger and between each repeat
				"maxTimeCumulative" : 1, // the maximum amount of time (minutes) this reward can be obtained at

				"minStrugglesCumulative" : 1, // the minimum amount of struggles (seconds) before this reward can be obtained
				"strugglesCumulative" : 10, // the amount of struggles (seconds) for this reward to trigger between each repeat
				"maxStrugglesCumulative" : 20, // the maximum amount of struggles (seconds) this reward can be obtained at

				"minTimesDigested" : 1, // the minimum amount of times you/the npc must be digested before this reward can be obtained
				"timesDigested" : 1, // the amount of times you/the npc must be digested for this reward to trigger and between each repeat
				"maxTimesDigested" : 5, // the maximum amount of times you/the npc can be digested and obtain this reward

				"specialArgs" : { // unique special arguments, would only ever be used if your NPC had custom lua scripting to write some special values
					"specialArg1":{ // the name of the value in the occupant's visited or cumulative data table to check against
						"cumulative": true, // used to mark the value is saved in the cumulative data table and to check there
						"min" : 1, // min value for this reward to trigger
						"value" : 2, // value for each repeat
						"max" : 3, // max value for this reward to trigger
						"mul" : 1 // multiplies the above values when checking against the saved values, for ease of handling things like making your time in minutes rather than seconds
					}
				}
			},
			*/

			"timedReward1" : { "repeatable" : true, "time" : 5, "minTime" : 0, "pool" : "money" },

			"hour1" : { "time" : 60, "pool" : "lowValueQuestRewards" }, // one hour
			"hour3" : { "time" : 180, "pool" : "mediumValueQuestRewards" }, // three hours
			"hour6" : { "time" : 360, "pool" : "mediumValueQuestRewards" }, // six hours
			"hour12" : { "time" : 720, "pool" : "highValueQuestRewards" }, // twelve hours
			"day" : { "repeatable" : true, "time" : 1440, "pool" : "highValueQuestRewards" }, // a full day

			"struggleReward1" : { "repeatable" : true, "struggles" : 50, "minStruggles" : 0, "pool" : "money" },

			"hour1Cumulative" : { "timeCumulative" : 60, "pool" : "lowValueQuestRewards" }, // one hour
			"hour3Cumulative" : { "timeCumulative" : 180, "pool" : "mediumValueQuestRewards" }, // three hours
			"hour6Cumulative" : { "timeCumulative" : 360, "pool" : "mediumValueQuestRewards" }, // six hours
			"hour12Cumulative" : { "timeCumulative" : 720, "pool" : "highValueQuestRewards" }, // twelve hours

			"dayCumulative" : { "repeatable" : true, "timeCumulative" : 1440, "pool" : "highValueQuestRewards" }, // a full day
			"weekCumulative" : { "repeatable" : true, "timeCumulative" : 10080, "pool" : "highValueQuestRewards" } // a full week
		},
		// rewards given to the player for doing things for their prey are here! cumulative ones accumulate time between different sessions, otherwise it only counts up per the current session
		// you can make a reward take both per session time as well as cumulative time!
		// reward args are the same as for the pred reward table, but are for the prey being inside you
		"sbqPreyRewards" : {
			// Time is in minutes here!
			"timedReward1" : { "repeatable" : true, "time" : 5, "minTime" : 10, "pool" : "money" },

			"hour3" : { "time" : 180, "pool" : "lowValueQuestRewards" }, // three hours
			"hour6" : { "time" : 360, "pool" : "mediumValueQuestRewards" }, // six hours
			"hour12" : { "time" : 720, "pool" : "highValueQuestRewards" }, // twelve hours

			"day1" : { "repeatable" : true, "time" : 1440, "pool" : "highValueQuestRewards" }, // a full day

			"digestedReward1" : { "repeatable" : true, "timesDigested" : 1, "pool" : "money"},
			"digestedReward2" : { "repeatable" : true, "timesDigested" : 5, "pool" : "lowValueQuestRewards"},

			"hour1Cumulative" : { "timeCumulative" : 60, "pool" : "lowValueQuestRewards" }, // one hour
			"hour3Cumulative" : { "timeCumulative" : 180, "pool" : "mediumValueQuestRewards" }, // three hours
			"hour6Cumulative" : { "timeCumulative" : 360, "pool" : "mediumValueQuestRewards" }, // six hours
			"hour12Cumulative" : { "timeCumulative" : 720, "pool" : "highValueQuestRewards" }, // twelve hours

			"day1Cumulative" : { "repeatable" : true, "timeCumulative" : 1440, "pool" : "highValueQuestRewards" }, // a full day
			"week1Cumulative" : { "repeatable" : true, "timeCumulative" : 10080, "pool" : "highValueQuestRewards" } // a full week
		}


		// the args below are for randomizing specific settings between possible values in the table when the pred is first summoned, a few examples have been defined
		// specific OCs will probably have specific prefrences in mind, so you may not want things to randomize at all
		/*
		"sbqRandomizeSettings" : {
			"oralVorePred" : [true,false],

			"bellyEffectSlot" : [ "none", "heal", "softDigest", "digest"],

			// we shouldn't have the randomly generated preds generate with nsfw stuff
			// not everyone wants to stumble across an NPC with their dick out

			//"cockVorePred" : [true,false],
		}
		*/
		/*
		"sbqRandomizePreySettings" : {
			"oralVore" : [true,false]
		},
		*/
	},
	"statusControllerSettings" : {
		"stats" : {
			"protection" : {
				"baseValue" : 100.0 // this will make your OC immune to most forms of damage outside of vore
			}
		},
		"statusProperties" : {
			"sbqDidVornyConvertCheck" : true,

			// this arg for speciesAnimOverrideData should only be used if your NPC has a unique body, only mess with it if you know what you're doing
			"speciesAnimOverrideData" : {},

			// the prey prefrences for this NPC are set here!
			// set each one to the value you want, if there are any that are unset, they'll just go to the default values

			"sbqPreyEnabled" : {
				"preyEnabled" : true,

				"digestAllow": true,
				"softDigestAllow" : true,
				"digestItemDropsAllow" : true,

				"cumDigestAllow": true,
				"cumSoftDigestAllow": true,
				"cumDigestItemDropsAllow" : true,

				"femcumDigestAllow": true,
				"femcumSoftDigestAllow": true,
				"femcumDigestItemDropsAllow" : true,

				"milkDigestAllow": true,
				"milkSoftDigestAllow" : true,
				"milkDigestItemDropsAllow" : true,

				"transformAllow": true,
				"cumTransformAllow": true,
				"genderswapAllow": true,
				"eggAllow": true,

				"held" : true,

				"oralVore" : true,
				"tailVore" : true,
				"absorbVore" : true,
				"navelVore" : true,

				"analVore" : true,
				"unbirth" : true,
				"cockVore" : true,
				"breastVore" : true,

				"bellyInfusion" : true,
				"cockInfusion" : true,
				"pussyInfusion" : true,
				"breastsInfusion" : true
			}
		}
	}
}
